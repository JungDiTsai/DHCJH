@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
form, label,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  font-family: "wangHangMing","Microsoft JhengHei";
  box-sizing: border-box; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1.5; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

@font-face {
  font-family: "wangHangMing";
  src: url("../font/WCL-02.ttf"); }

@font-face {
  font-family: "微軟正黑體";
  src: "https://fonts.googleapis.com/css?family=Noto+Sans+TC"; }

.col-1 {
  width: 8.333333%; }

.col-2 {
  width: 16.666666%; }

.col-3 {
  width: 25%; }

.col-4 {
  width: 33.333333%; }

.col-5 {
  width: 41.666666%; }

.col-6 {
  width: 50%; }

.col-7 {
  width: 58.333333%; }

.col-8 {
  width: 66.666666%; }

.col-9 {
  width: 75%; }

.col-10 {
  width: 83.333333%; }

.col-11 {
  width: 91.666666%; }

.col-12 {
  width: 100%; }

@media screen and (min-width: 768px) {
  .col-md-1 {
    width: 8.333333%; }
  .col-md-2 {
    width: 16.666666%; }
  .col-md-3 {
    width: 25%; }
  .col-md-4 {
    width: 33.333333%; }
  .col-md-5 {
    width: 41.666666%; }
  .col-md-6 {
    width: 50%; }
  .col-md-7 {
    width: 58.333333%; }
  .col-md-8 {
    width: 66.666666%; }
  .col-md-9 {
    width: 75%; }
  .col-md-10 {
    width: 83.333333%; }
  .col-md-11 {
    width: 91.666666%; }
  .col-md-12 {
    width: 100%; } }

@media screen and (min-width: 992px) {
  .col-lg-1 {
    width: 8.333333%; }
  .col-lg-2 {
    width: 16.666666%; }
  .col-lg-3 {
    width: 25%; }
  .col-lg-4 {
    width: 33.333333%; }
  .col-lg-5 {
    width: 41.666666%; }
  .col-lg-6 {
    width: 50%; }
  .col-lg-7 {
    width: 58.333333%; }
  .col-lg-8 {
    width: 66.666666%; }
  .col-lg-9 {
    width: 75%; }
  .col-lg-10 {
    width: 83.333333%; }
  .col-lg-11 {
    width: 91.666666%; }
  .col-lg-12 {
    width: 100%; } }

@media screen and (min-width: 1200px) {
  .col-xl-1 {
    width: 8.333333%; }
  .col-xl-2 {
    width: 16.666666%; }
  .col-xl-3 {
    width: 25%; }
  .col-xl-4 {
    width: 33.333333%; }
  .col-xl-5 {
    width: 41.666666%; }
  .col-xl-6 {
    width: 50%; }
  .col-xl-7 {
    width: 58.333333%; }
  .col-xl-8 {
    width: 66.666666%; }
  .col-xl-9 {
    width: 75%; }
  .col-xl-10 {
    width: 83.333333%; }
  .col-xl-11 {
    width: 91.666666%; }
  .col-xl-12 {
    width: 100%; } }

* {
  box-sizing: border-box; }

#nav-icon2 {
  height: 44px;
  cursor: pointer; }

#bigMember {
  width: 50px;
  height: 50px;
  border-radius: 50%; }

#nav-icon2 span {
  display: block;
  position: absolute;
  height: 4px;
  width: 50%;
  background: #2cffff;
  opacity: 1;
  -webkit-transform: rotate(0deg);
  -moz-transform: rotate(0deg);
  -o-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: .25s ease-in-out;
  -moz-transition: .25s ease-in-out;
  -o-transition: .25s ease-in-out;
  transition: .25s ease-in-out; }

#nav-icon2 span:nth-child(even) {
  left: 50%;
  border-radius: 0 9px 9px 0; }

#nav-icon2 span:nth-child(odd) {
  left: 0px;
  border-radius: 9px 0 0 9px; }

#nav-icon2 span:nth-child(1), #nav-icon2 span:nth-child(2) {
  top: 0px; }

#nav-icon2 span:nth-child(3), #nav-icon2 span:nth-child(4) {
  top: 18px; }

#nav-icon2 span:nth-child(5), #nav-icon2 span:nth-child(6) {
  top: 36px; }

#nav-icon2.open span:nth-child(1), #nav-icon2.open span:nth-child(6) {
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  transform: rotate(45deg); }

#nav-icon2.open span:nth-child(2), #nav-icon2.open span:nth-child(5) {
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  transform: rotate(-45deg); }

#nav-icon2.open span:nth-child(1) {
  left: 0px;
  top: 10px;
  width: 30px; }

#nav-icon2.open span:nth-child(2) {
  left: calc(50% - 6px);
  top: 10px;
  width: 30px; }

#nav-icon2.open span:nth-child(3) {
  left: -50%;
  opacity: 0; }

#nav-icon2.open span:nth-child(4) {
  left: 100%;
  opacity: 0; }

#nav-icon2.open span:nth-child(5) {
  left: 0px;
  top: 26px;
  width: 30px; }

#nav-icon2.open span:nth-child(6) {
  left: calc(50% - 6px);
  top: 26px;
  width: 30px; }

#menu_control {
  position: absolute;
  opacity: 0;
  z-index: -2; }

#menu_control:checked ~ header .mainNav {
  top: 80px;
  transition: 0.3s; }
  #menu_control:checked ~ header .mainNav img {
    top: 10px; }

.menubtn {
  display: block;
  width: 44px;
  position: absolute;
  height: 40px;
  top: 20px;
  right: 10px; }

.mainNav {
  position: absolute;
  width: 100%;
  height: 100vh;
  z-index: 100;
  top: calc(-100vh - 80px);
  transition: 0.3s;
  background-color: #333; }

.mainNav {
  padding-top: 25px;
  font-size: 24px;
  font-family: "wangHangMing"; }
  .mainNav h1 img {
    position: fixed;
    top: 10px;
    left: 10px;
    width: auto;
    height: 60px; }
  .mainNav a {
    text-decoration: none;
    color: #ffffbd; }
  .mainNav li {
    margin: 30px auto;
    left: 0;
    right: 0;
    width: 150px;
    text-align: center;
    display: block;
    border-bottom: 30px solid  transparent;
    border-bottom-width: 30px;
    border-image: url("../images/navTDD.png") 41 round; }
  .mainNav .navMemBtn {
    position: fixed;
    top: 18px;
    right: 84px;
    font-size: 44px;
    height: 44px;
    width: 44px; }
    .mainNav .navMemBtn img {
      cursor: pointer;
      position: absolute;
      width: 34px; }
      .mainNav .navMemBtn img:hover {
        animation: jitter 5s linear infinite alternate-reverse; }
    .mainNav .navMemBtn p {
      display: none; }

header {
  position: fixed;
  background-image: url("../images/navigatorM.png");
  background-size: cover;
  background-repeat: no-repeat;
  height: 80px;
  width: 100%;
  top: 0px;
<<<<<<< HEAD
  z-index: 99;
  animation: headerNeon 1s infinite; }

footer {
  padding-top: 15px;
  width: 100%;
  height: 115px;
  background-image: url(../images/footerBgi.jpg);
  background-repeat: no-repeat;
  background-attachment: scroll;
  background-position: center;
  background-size: cover; }
  footer p {
    font-size: 16px;
    color: #fff;
    text-align: center;
    padding-top: 0px; }
  footer div {
    text-align: center; }
  footer img {
    border-radius: 100%;
    margin: 4px;
    width: 36px; }
=======
  z-index: 101;
  animation: headerNeon 1s infinite; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69

@media screen and (min-width: 1200px) {
  #bigMember {
    transform: translateY(-25%) translateX(-25%); }
  .menubtn {
    display: none; }
  header {
    background-image: url("../images/navigator.svg");
    background-size: cover;
    background-position: center center;
    height: 130px; }
  .mainNav {
    padding: 0;
    background-color: initial;
    top: 0px;
    position: relative;
    max-width: 1200px;
    text-align: center;
    height: 110px;
    margin: auto;
    display: flex; }
    .mainNav .navMemBtn {
      display: flex;
      width: 88px;
      height: 24px;
      right: 0px;
      margin: 0;
      position: fixed;
      top: 38px; }
      .mainNav .navMemBtn img {
        height: 24px;
        width: 24px;
        text-align: center;
        position: initial;
        display: inline-block; }
      .mainNav .navMemBtn p {
        font-size: 16px;
        color: #2cffff;
        width: 100%;
        line-height: 16px;
        margin-top: 8px;
        cursor: pointer;
        display: block; }
    .mainNav li {
      flex-grow: 1;
      flex-wrap: nowrap;
      width: 150px;
      vertical-align: top;
      display: inline-block;
      margin-top: 25px;
      border-bottom: initial; }
      .mainNav li:nth-child(4) {
        padding-right: 48px; }
      .mainNav li:nth-child(5) {
        padding-right: 93px; }
      .mainNav li a {
        transition: .4s;
        border-bottom: 25px solid transparent;
        border-image: url("../images/navTDD.png") 30 41 round;
        border-image-outset: 1px; }
    .mainNav li a:hover {
      color: #2cffff;
      animation: lightShow .3s infinite alternate;
      border-bottom: 25px solid transparent;
      border-image: url("../images/navTDL.png") 30 41 round;
      transition: .3s; }
    .mainNav h1 {
      display: inline-block;
      flex-grow: 1;
      padding-left: 5px;
      padding-top: 8px; }
      .mainNav h1 img {
        width: auto;
        position: initial;
        height: 95px;
        transition: 0.6s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
        .mainNav h1 img:hover {
          filter: drop-shadow(3px 3px 5px #66f);
          animation: headerNeon 1s infinite;
          transform: scale(1.2) translateY(10px);
          transition: 0.6s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
    .mainNav i {
      color: #2cffff; } }

@keyframes neon {
  0%,
  100% {
    text-shadow: 0 0 1vw #FA1C16, 0 0 2vw #FA1C16, 0 0 5vw #FA1C16, 0 0 5vw #FA1C16, 0 0 .4vw #FED128, .5vw .5vw .1vw #806914;
    color: #FED128; }
  50% {
    text-shadow: 0 0 .5vw #800E0B, 0 0 1.5vw #800E0B, 0 0 5vw #800E0B, 0 0 5vw #800E0B, 0 0 .2vw #800E0B, .5vw .5vw .1vw #40340A;
    color: #fff; } }

@keyframes lightShow {
  0% {
    border-image: url("../images/navTDD.png") 30 41 round; }
  100% {
    border-image: url("../images/navTDL.png") 30 41 round; } }

@keyframes jitter {
  0% {
    border-radius: 40% 55% 60% 45%; }
  20% {
    border-radius: 50% 40% 50% 60%; }
  40% {
    border-radius: 45% 50% 55% 50%; }
  60% {
    border-radius: 50% 35% 50% 65%; }
  80% {
    border-radius: 40% 45% 60% 55%; }
  100% {
    border-radius: 54% 50% 46% 40%; } }

@keyframes headerNeon {
  0% {
    filter: drop-shadow(3px 2px 8px rgba(245, 132, 132, 0.7)); }
  25% {
    filter: drop-shadow(3px -2px 8px rgba(248, 202, 74, 0.7)); }
  50% {
    filter: drop-shadow(-3px -2px 8px rgba(177, 255, 132, 0.7)); }
  75% {
    filter: drop-shadow(-3px 2px 8px rgba(255, 255, 255, 0.7)); }
  100% {
    filter: drop-shadow(3px 2px 8px rgba(59, 78, 250, 0.7)); } }

@keyframes processIntro {
  from {
    transform: o; }
  to {
    opacity: 0; } }

@keyframes truck {
  0% {
    transform: translateY(10px); }
  50% {
    transform: translateY(16px); }
  100% {
    transform: translateY(10px); } }

@keyframes rotate {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(-359deg); } }

@keyframes colors {
  0% {
    background-color: #3498db; }
  20% {
    background-color: #3498db; }
  30% {
    background-color: #2c3e50; }
  70% {
    background-color: #2c3e50; }
  80% {
    background-color: #3498db; }
  100% {
    background-color: #3498db; } }

@keyframes boxshadows {
  0% {
    box-shadow: 0 0 10px #3498db, 0 0 10px #3498db inset; }
  20% {
    box-shadow: 0 0 10px #3498db, 0 0 10px #3498db inset; }
  30% {
    box-shadow: 0 0 10px #fff, 0 0 10px #fff inset; }
  70% {
    box-shadow: 0 0 10px #fff, 0 0 10px #fff inset; }
  80% {
    box-shadow: 0 0 10px #3498db, 0 0 10px #3498db inset; }
  100% {
    box-shadow: 0 0 10px #3498db, 0 0 10px #3498db inset; } }

@keyframes aitf {
  0% {
    background-position: 0% 50%; }
  100% {
    background-position: 100% 50%; } }

@keyframes starscolors {
  0% {
    background-color: #3498db; }
  20% {
    background-color: #3498db; }
  30% {
    background-color: #ffffff; }
  70% {
    background-color: #ffffff; }
  80% {
    background-color: #3498db; }
  100% {
    background-color: #3498db; } }

@keyframes blurFadeInOut {
  0% {
    opacity: 1;
    text-shadow: 0px 0px 1px #fff; }
  100% {
    opacity: 0;
    text-shadow: 0px 0px 50px #fff;
    display: none; } }

@-webkit-keyframes rotateDiscoBall {
  0% {
    -webkit-transform: rotateX(90deg) rotateZ(0deg) rotate(0deg); }
  100% {
    -webkit-transform: rotateX(90deg) rotateZ(360deg) rotate(0deg); } }

@keyframes rotateDiscoBall {
  0% {
    transform: rotateX(90deg) rotateZ(0deg) rotate(0deg); }
  100% {
    transform: rotateX(90deg) rotateZ(360deg) rotate(0deg); } }

@-webkit-keyframes rotateDiscoBallMiddle {
  0% {
    -webkit-transform: rotateX(90deg) rotateY(0deg) rotate(0deg); }
  100% {
    -webkit-transform: rotateX(90deg) rotateY(-360deg) rotate(0deg); } }

@keyframes rotateDiscoBallMiddle {
  0% {
    transform: rotateX(90deg) rotateY(0deg) rotate(0deg); }
  100% {
    transform: rotateX(90deg) rotateY(-360deg) rotate(0deg); } }

@-webkit-keyframes reflect {
  0% {
    -webkit-filter: brightness(60%);
    -webkit-filter: hue-rotate(0); }
  50% {
    -webkit-filter: brightness(120%); }
  100% {
    -webkit-filter: brightness(90%);
    -webkit-filter: hue-rotate(360deg); } }

@keyframes reflect {
  0% {
    opacity: 1;
    -webkit-filter: hue-rotate(0); }
  50% {
    opacity: 0.4; }
  100% {
    opacity: 1;
    -webkit-filter: hue-rotate(360deg); } }

@keyframes scaleBox {
  0% {
    transform: scale(1); }
  100% {
    transform: scale(1.02); } }

#lightWrap {
  display: none;
  position: fixed;
  background: rgba(0, 0, 0, 0.7);
  width: 100%;
  height: 100%;
  z-index: 2; }

.loginBox, .loginbox1 {
  display: none;
  width: 300px;
  height: 350px;
  background: #000;
  border: 5px solid #17F4F0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  z-index: 50;
  border-radius: 10px;
  padding: 30px 40px;
  box-sizing: border-box;
  text-align: center;
  box-shadow: 0 0 10px #17F4F0;
<<<<<<< HEAD
  box-shadow: 0 0 10px  #666 inset; }
=======
  box-shadow: 0 0 10px  #eee inset; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
  .loginBox .fa-times, .loginbox1 .fa-times {
    color: #17F4F0;
    position: absolute;
    right: 10px;
    top: 10px;
    cursor: pointer; }
    .loginBox .fa-times:hover, .loginbox1 .fa-times:hover {
<<<<<<< HEAD
      color: #000; }
=======
      color: #eee; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
  .loginBox h3, .loginbox1 h3 {
    margin-top: 0px;
    font-size: 30px;
    color: #17F4F0; }
  .loginBox .inputBox, .loginbox1 .inputBox {
    background: #2d3631;
    border-radius: 10px;
    margin-top: 10px;
    padding: 10px 15px; }
    .loginBox .inputBox i, .loginbox1 .inputBox i {
<<<<<<< HEAD
      color: #fff; }
=======
      color: #eee; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
    .loginBox .inputBox input, .loginbox1 .inputBox input {
      height: 20px;
      margin-left: 10px;
      width: 80%;
      background: #2d3631;
      outline: none;
      border: none;
<<<<<<< HEAD
      color: #fff; }
=======
      color: #eee; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
  .loginBox .commonBtnSmall, .loginbox1 .commonBtnSmall {
    margin-top: 20px;
    width: 80px;
    height: 40px;
    border-radius: 5px;
    line-height: 40px; }
  .loginBox p, .loginbox1 p {
    margin-top: 20px;
    color: #17F4F0; }
    .loginBox p a, .loginbox1 p a {
      cursor: pointer;
      color: #17F4F0;
      text-decoration: none; }
      .loginBox p a:hover, .loginbox1 p a:hover {
        color: #f3d217; }

.registeredBox {
  display: none;
  max-width: 450px;
  height: 500px;
  background: #000;
  border: 5px solid #17F4F0;
  position: fixed;
  top: 50px;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  z-index: 50;
  border-radius: 10px;
  box-sizing: border-box;
  box-shadow: 0 0 10px #17F4F0;
  box-shadow: 0 0 10px  #666 inset;
  padding: 25px;
  text-align: center; }
  .registeredBox .fa-times {
    color: #17F4F0;
    position: absolute;
    right: 10px;
    top: 10px;
    cursor: pointer; }
    .registeredBox .fa-times:hover {
      color: #000; }
  .registeredBox h3 {
    margin: 0;
    font-size: 30px;
    color: #17F4F0; }
  .registeredBox table {
    width: 100%;
    margin: 20px auto;
<<<<<<< HEAD
    border: 1px solid #fff;
    color: #17F4F0;
=======
    border: 1px solid #000;
    color: #eee;
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
    font-size: 18px; }
    .registeredBox table .prompt {
      font-size: 14px;
      color: #e26f6f; }
    .registeredBox table td, .registeredBox table th {
      padding: 5px; }
    .registeredBox table .commonBtnSmall {
      margin: 10px;
      width: 100px;
      height: 50px;
      border-radius: 5px;
      line-height: 50px; }
    .registeredBox table label {
      margin-right: 30px; }
      .registeredBox table label input {
        position: absolute;
        opacity: 0;
        z-index: -1; }
      .registeredBox table label input:checked + i {
<<<<<<< HEAD
        color: #281886; }
=======
        color: #51F3F0; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
      .registeredBox table label i:hover {
        cursor: pointer; }
  .registeredBox div {
    margin-top: 10px;
    color: #17F4F0; }
    .registeredBox div input {
      margin-left: 20px; }
    .registeredBox div a {
      cursor: pointer; }
      .registeredBox div a:hover {
        color: #f3d217; }

.forgotBox {
  display: none;
  width: 300px;
  height: 370px;
  background: #000;
  border: 5px solid #17F4F0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  z-index: 50;
  border-radius: 10px;
  box-sizing: border-box;
  box-shadow: 0 0 10px #17F4F0;
  box-shadow: 0 0 10px  #666 inset;
  padding: 25px;
  text-align: center; }
  .forgotBox .fa-times {
    color: #17F4F0;
    position: absolute;
    right: 10px;
    top: 10px;
    cursor: pointer; }
    .forgotBox .fa-times:hover {
      color: #f3d217; }
  .forgotBox h3 {
    margin: 0;
    font-size: 30px;
    color: #17F4F0; }
  .forgotBox p {
    margin-top: 10px;
    font-size: 16px;
<<<<<<< HEAD
    color: #47472d; }
=======
    color: #eee; }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
  .forgotBox div {
    margin-top: 40px;
    color: #17F4F0; }
    .forgotBox div input {
      margin-left: 20px; }
    .forgotBox div a {
      cursor: pointer; }
      .forgotBox div a:hover {
        color: #f3d217; }
  .forgotBox .commonBtnSmall {
    margin-top: 10px;
    width: 100px;
    height: 50px;
    border-radius: 5px;
    line-height: 50px; }

#IdStatus {
  display: none; }

::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  /*background-color: #ddd;*/ }

/*滑塊*/
::-webkit-scrollbar-thumb {
  background-color: #333;
  border-radius: 10px; }

::-webkit-scrollbar-thumb:hover {
  background-color: #777; }

/*滑道*/
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px #333;
  border-radius: 10px; }

.wrap {
  margin-top: 80px; }

.min_view {
  display: block; }

.max_view {
  display: none; }

#memberNav {
  line-height: 1.5;
  width: 100%;
  overflow: auto;
  box-sizing: border-box;
  padding: 0;
  background: #2c3b42; }
  #memberNav .memberImg {
    margin: 50px auto 0;
    width: 150px;
    height: 150px;
    position: relative;
    text-align: center;
    vertical-align: top;
    clip-path: polygon(50% 0%, 83% 12%, 100% 43%, 94% 78%, 68% 100%, 32% 100%, 6% 78%, 0% 43%, 17% 12%); }
    #memberNav .memberImg img {
      height: 100%;
      vertical-align: top; }
  #memberNav h3 {
    margin-top: 25px;
    text-align: center;
    font-size: 32px;
    color: #fff; }
  #memberNav ul {
    width: 1050px;
    height: 50px;
    display: flex;
    align-items: center; }
    #memberNav ul li {
      width: 120px;
      float: left;
      margin: 0 15px;
      text-align: center; }
      #memberNav ul li a {
        color: #fff;
        font-size: 18px;
        text-decoration: none; }
      #memberNav ul li:hover a {
        color: #FB4264;
        text-shadow: 0 0 3vw #F40A35;
        animation: neon 1s ease infinite; }
    #memberNav ul .here {
      transform: scale(1.1); }
      #memberNav ul .here a {
        color: #2cffff; }
  #memberNav ul::after {
    content: '';
    display: block;
    clear: left; }

#memberImgFile {
  opacity: 0;
  position: absolute; }

@media screen and (min-width: 768px) {
  .min_view {
    display: none; }
  .max_view {
    display: block; }
  .wrap {
    display: flex;
    flex-wrap: nowrap;
    position: relative; }
  #memberNav {
    width: 100%;
    background: #2c3b42;
    line-height: 1.5;
    box-sizing: border-box;
    padding: 0; }
    #memberNav h3 {
      margin: 25px 0px 10px;
      font-size: 30px;
      text-shadow: 0 0 2px black;
      color: #fff6f6; }
    #memberNav ul {
      width: 100%;
      box-sizing: border-box;
      padding-left: 20%;
      flex-wrap: wrap; }
      #memberNav ul .here {
        transform-origin: left; }
      #memberNav ul li {
        width: 100%;
        font-size: 18px;
        margin: 15px 0;
        text-align: left;
        color: #ffffbd; }
        #memberNav ul li a {
          font-size: 24px; } }

@media screen and (min-width: 1200px) {
  #memberNav {
    width: 16.666666%; } }

.commonBtn {
  font-size: 24px;
  font-family: "wangHangMing";
  width: 150px;
  height: 75px;
  background: #323;
  background-size: cover;
  color: #ffffbd;
  border-radius: 20px;
  line-height: 75px;
  border: none;
  outline: none;
  box-shadow: 0 0 3px 4px #ffffbd, 0px 0px 15px #ffffbd;
  z-index: 2;
  cursor: pointer; }
  .commonBtn:hover {
    transform: scale(1.05);
    box-shadow: 0px 0px 25px #ffffbd, 0 0 2px 2px #fff; }

.commonBtnSmall {
  font-size: 16px;
  font-family: "wangHangMing";
  width: 100px;
  height: 60px;
  background: #002a4f;
  background-size: cover;
  color: #ffffbd;
  border-radius: 15px;
  line-height: 60px;
  border: none;
  outline: none;
  z-index: 2;
  box-shadow: 0 0 2px 4px #ffffbd;
  cursor: pointer; }
  .commonBtnSmall:hover {
    transform: scale(1.05);
    box-shadow: 0px 0px 25px #ffffbd, 0 0 0 1px #fff; }

.col-md-10 {
  background: url(../images/bkground/member_bg.jpg) center;
  background-size: cover;
  min-height: 100vh;
  padding: 10px; }

.AllflyerBox {
  width: 100%;
  max-width: 800px;
  box-sizing: border-box;
  padding-bottom: 30px;
  text-align: center;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 1px 1px 5px #333; }
  .AllflyerBox h3 {
    padding-top: 20px;
    color: #e56e50;
    font-size: 30px; }
  .AllflyerBox table {
    margin: 20px auto 0px;
    width: 100%;
    text-align: center;
    font-size: 18px; }
    .AllflyerBox table tbody tr {
      cursor: pointer; }
      .AllflyerBox table tbody tr:hover {
        background-image: linear-gradient(to left, #ff8177 0%, #ff867a 0%, #ff8c7f 21%, #f99185 52%, #cf556c 78%, #b12a5b 100%); }
    .AllflyerBox table td:first-of-type {
      width: 10%; }
    .AllflyerBox table td label .cbox {
      position: absolute;
      z-index: 1;
      opacity: 0; }
      .AllflyerBox table td label .cbox:checked + .btnBox {
        text-align: right;
        background: #32ff7e; }
    .AllflyerBox table td label .btnBox {
      display: inline-block;
      width: 40px;
      line-height: 20px;
      height: 20px;
      vertical-align: middle;
      background: #fff82d;
      border-radius: 10px;
      text-align: left;
      cursor: pointer; }
      .AllflyerBox table td label .btnBox .btn {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 20px;
        box-sizing: border-box;
        box-shadow: 0 0 3px #000;
        background: #fff; }
    .AllflyerBox table td label .txt {
      display: inline-block; }

.detailFlyer {
  width: 90%;
  max-width: 800px;
  margin: 30px auto;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 1px 1px 5px #333; }
  .detailFlyer h4 {
    padding: 20px 0px;
    color: #1A1571;
    font-size: 30px;
    text-align: center; }
  .detailFlyer img {
    display: block;
    margin: 0 auto 10px;
<<<<<<< HEAD
    max-width: 700px;
=======
    max-width: 300px;
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
    box-shadow: 1px 5px 20px #ccc; }
  .detailFlyer table {
    margin: auto;
    font-size: 18px; }
    .detailFlyer table tr {
      max-width: 80%; }
      .detailFlyer table tr td {
        padding: 5px 10px; }
        .detailFlyer table tr td:first-of-type {
          width: 25%; }
  .detailFlyer .btnBar {
    padding: 50px 0 50px;
    margin: auto;
    text-align: center; }
    .detailFlyer .btnBar button {
      box-shadow: 0px 2px 2px #888;
      border-radius: 5px;
      line-height: 50px;
      cursor: pointer; }
    .detailFlyer .btnBar button {
      width: 100px;
      height: 50px; }

@media screen and (min-width: 768px) {
  .col-md-10 {
    padding-top: 150px; }
  .AllflyerBox {
    margin: 50px auto; }
    .AllflyerBox h3 {
      font-size: 36px; }
    .AllflyerBox table th, .AllflyerBox table td {
      font-size: 22px; }
      .AllflyerBox table th label .btnBox .btn, .AllflyerBox table td label .btnBox .btn {
        width: 22px;
        height: 22px; }
  .detailFlyer h4 {
<<<<<<< HEAD
    font-size: 32px; } }
=======
    font-size: 32px; }
  .detailFlyer img {
    max-width: 500px; } }
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69

@media screen and (min-width: 1200px) {
  .AllflyerBox {
    margin: 50px auto; }
    .AllflyerBox table {
      width: 80%; } }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 0f212f51d1004dbb77bbfa7aba85260c2e85be69
